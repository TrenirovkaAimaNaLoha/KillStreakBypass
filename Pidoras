local Player = game:GetService("Players").LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- GUI Styles
local COLORS = {
    BACKGROUND = Color3.fromRGB(35, 35, 50),
    HEADER = Color3.fromRGB(45, 45, 65),
    BUTTON = Color3.fromRGB(60, 60, 85),
    ENABLED = Color3.fromRGB(46, 204, 113),
    DISABLED = Color3.fromRGB(231, 76, 60),
    TEXT = Color3.fromRGB(255, 255, 255)
}

local function CreateRoundedFrame(size, position)
    local frame = Instance.new("Frame")
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = COLORS.BACKGROUND
    frame.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = frame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 255, 255)
    stroke.Transparency = 0.9
    stroke.Thickness = 1
    stroke.Parent = frame
    
    return frame
end

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EnhancedKillStreakGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local Frame = CreateRoundedFrame(
    UDim2.new(0, 250, 0, 200),
    UDim2.new(0.5, -125, 0.5, -100)
)
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Visible = true
Frame.Parent = ScreenGui

local Shadow = Instance.new("ImageLabel")
Shadow.Size = UDim2.new(1.2, 0, 1.2, 0)
Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://1316045217"
Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
Shadow.ImageTransparency = 0.6
Shadow.ZIndex = -1
Shadow.Parent = Frame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundColor3 = COLORS.HEADER
Title.Text = "KILLSTREAK STEALER"
Title.TextColor3 = COLORS.TEXT
Title.TextSize = 18
Title.Font = Enum.Font.GothamBold
Title.Parent = Frame

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = Title

local KillCounter = Instance.new("TextLabel")
KillCounter.Size = UDim2.new(0.9, 0, 0, 35)
KillCounter.Position = UDim2.new(0.05, 0, 0.3, 0)
KillCounter.BackgroundColor3 = COLORS.BUTTON
KillCounter.TextColor3 = COLORS.TEXT
KillCounter.Text = "KILLS: 0/9"
KillCounter.TextSize = 16
KillCounter.Font = Enum.Font.GothamSemibold
KillCounter.Parent = Frame

UICorner:Clone().Parent = KillCounter

local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0.9, 0, 0, 35)
ToggleButton.Position = UDim2.new(0.05, 0, 0.5, 0)
ToggleButton.BackgroundColor3 = COLORS.DISABLED
ToggleButton.TextColor3 = COLORS.TEXT
ToggleButton.Text = "DISABLED"
ToggleButton.TextSize = 16
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Parent = Frame

UICorner:Clone().Parent = ToggleButton

local DeleteButton = Instance.new("TextButton")
DeleteButton.Size = UDim2.new(0.9, 0, 0, 35)
DeleteButton.Position = UDim2.new(0.05, 0, 0.7, 0)
DeleteButton.BackgroundColor3 = COLORS.BUTTON
DeleteButton.TextColor3 = COLORS.TEXT
DeleteButton.Text = "DELETE GUI"
DeleteButton.TextSize = 16
DeleteButton.Font = Enum.Font.GothamBold
DeleteButton.Parent = Frame

UICorner:Clone().Parent = DeleteButton

local function CreateNotification(text, duration)
    local NotificationGui = Instance.new("ScreenGui")
    NotificationGui.Name = "EnhancedNotification"
    NotificationGui.Parent = PlayerGui

    local NotifFrame = CreateRoundedFrame(
    UDim2.new(0, 250, 0, 60),
    UDim2.new(0.5, -125, 0.7, 0)  -- Changed from 0.85 to 0.7
)
    NotifFrame.BackgroundTransparency = 0.1
    NotifFrame.Parent = NotificationGui

    local NotifText = Instance.new("TextLabel")
    NotifText.Size = UDim2.new(0.9, 0, 0.9, 0)
    NotifText.Position = UDim2.new(0.05, 0, 0.05, 0)
    NotifText.BackgroundTransparency = 1
    NotifText.TextColor3 = COLORS.TEXT
    NotifText.Text = text
    NotifText.TextSize = 16
    NotifText.Font = Enum.Font.GothamSemibold
    NotifText.TextWrapped = true
    NotifText.Parent = NotifFrame

    NotifFrame.Position = UDim2.new(0.5, -125, 1.1, 0)
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Bounce)
    local tween = TweenService:Create(NotifFrame, tweenInfo, {
        Position = UDim2.new(0.5, -125, 0.7, 0)  -- Changed from 0.85 to 0.7
    })
    tween:Play()

    game.Debris:AddItem(NotificationGui, duration)
    delay(duration - 0.5, function()
        local fadeTween = TweenService:Create(NotifFrame, TweenInfo.new(0.5), {
            BackgroundTransparency = 1
        })
        local textFadeTween = TweenService:Create(NotifText, TweenInfo.new(0.5), {
            TextTransparency = 1
        })
        fadeTween:Play()
        textFadeTween:Play()
    end)
end


local killStreakEnabled = false
local requiredKills = 9
local lastKills = 0
local killTracker = Player:WaitForChild("leaderstats"):WaitForChild("Total Kills")

local function UpdateButton()
    ToggleButton.Text = killStreakEnabled and "ENABLED" or "DISABLED"
    ToggleButton.BackgroundColor3 = killStreakEnabled and COLORS.ENABLED or COLORS.DISABLED
end

local function UpdateKillCounter()
    local currentKills = killTracker.Value - lastKills
    KillCounter.Text = string.format("KILLS: %d/%d", currentKills, requiredKills)
end

local function OnKillChange(newValue)
    local currentKills = newValue - lastKills
    UpdateKillCounter()
    
    if killStreakEnabled then
        if currentKills >= requiredKills then
            CreateNotification("Kill limit reached! Character will be eliminated", 3)
            if Player.Character and Player.Character:FindFirstChild("Humanoid") then
                Player.Character.Humanoid.Health = 0
                lastKills = killTracker.Value
            end
        else
            CreateNotification(string.format("Kills remaining: %d", requiredKills - currentKills), 2)
        end
    end
end

ToggleButton.MouseButton1Click:Connect(function()
    killStreakEnabled = not killStreakEnabled
    UpdateButton()
    CreateNotification(killStreakEnabled and "Killstreak Enabled!" or "Killstreak Disabled!", 2)
end)

DeleteButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

local function CreateRainbowText()
    local RainbowText = Instance.new("TextLabel")
    RainbowText.Size = UDim2.new(1, 0, 0, 20)
    RainbowText.Position = UDim2.new(0, 0, 0.2, 0)
    RainbowText.BackgroundTransparency = 1
    RainbowText.TextColor3 = COLORS.TEXT
    RainbowText.TextSize = 14
    RainbowText.Font = Enum.Font.GothamBold
    RainbowText.Parent = Frame

    local fullText = "by ilyatracher"
    local typingSpeed = 0.1
    local pauseDuration = 2
    local rainbowSpeed = 0.5

    while true do
        RainbowText.Text = ""
        for i = 1, #fullText do
            RainbowText.Text = string.sub(fullText, 1, i)
            wait(typingSpeed)
        end
        
        for i = 0, 1, 0.01 do
            RainbowText.TextColor3 = Color3.fromHSV(i, 1, 1)
            wait(rainbowSpeed/100)
        end
        
        wait(pauseDuration)
        
        for i = #fullText, 0, -1 do
            RainbowText.Text = string.sub(fullText, 1, i)
            wait(typingSpeed)
        end
        
        wait(1)
    end
end

coroutine.wrap(CreateRainbowText)()

UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.RightControl then
        Frame.Visible = not Frame.Visible
    end
end)

killTracker.Changed:Connect(OnKillChange)
lastKills = killTracker.Value
UpdateButton()
UpdateKillCounter()

Player.CharacterAdded:Connect(function()
    UpdateKillCounter()
    CreateNotification("Character Respawned - Killstreak Counter Reset", 3)
end)

local isDragging = false
local dragStart = nil
local startPos = nil

Title.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = true
        dragStart = input.Position
        startPos = Frame.Position
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
        local delta = input.Position - dragStart
        Frame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = false
        dragStart = nil
        startPos = nil
    end
end)

Title.MouseEnter:Connect(function()
    Title.BackgroundColor3 = COLORS.BUTTON
end)

Title.MouseLeave:Connect(function()
    Title.BackgroundColor3 = COLORS.HEADER
end)
